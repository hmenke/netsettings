#!/bin/sh

die() {
	>&2 echo "$@"
	exit 1
}

program="${0##*/}"
algo="sha1"
clip=""
charset="[:alnum:]"
password=""

if ! command -v openssl > /dev/null; then
	die "openssl not found"
fi

opts="$(getopt -o a:c::p:s: -l algo:,clip::,password:,set: -n "$0" -- "$@")"
err="$?"
eval set -- "$opts"
while true; do case $1 in
	-a|--algo) algo="$2"; shift 2 ;;
	-c|--clip) clip="${2:-clipboard}"; shift 2 ;;
	-p|--password) password="$2"; shift 2 ;;
	-s|--set) charset="$2"; shift 2 ;;
	--) shift; break ;;
esac done
website="$1"

if [ -n "$clip" ] && ! command -v xclip > /dev/null; then
	die "Clipboard requested but xclip is missing"
fi

if [ $err -ne 0 ] || [ $# -lt 1 ]; then
	cat >&2 <<-EOF
	Usage: $program [OPTIONS]... WEBSITE

	OPTIONS

	  -a, --algo=ALGO            Select hash algorithm (default "sha1")
	  -c, --clip=[SELECTION]     Copy password to clipboard selection
	                               SELECTION (default "clipboard")
	  -p, --password=[PASSWORD]  Use PASSWORD as password instead of
	                               prompting
	  -s, --set=SET              Set of characters to keep from the hash
	                               (default "[:alnum:]")

	EXAMPLES

	  $ webpass -p foo www.example.com
	  VB8xwrHst0KmDXKSOSoH189JbqE

	  $ webpass -p foo -c www.example.com
	  Copied to clipboard.

	  $ webpass -p foo -s '[:graph:]' www.example.com
	  VB8xwrHst0KmDXKSOSoH189JbqE=

	  $ webpass -p foo -a sha256 www.example.com
	  xzn5pYydqCmlfajrJ2jZjLeh5uXTehrjAJmIvWaCgU

	EOF
	exit 1
fi

if [ -z "$password" ]; then
	stty -echo
	>&2 printf "Password: "
	read -r password
	>&2 echo
	stty echo
fi

pass="$(printf "%s" "$website" | openssl "$algo" -hmac "$password" -binary | base64 | tr -d -c "$charset")"

if [ -n "$clip" ]; then
	printf "%s" "$pass" | xclip -selection "$clip" ||
		die "Error: Could not copy data to the clipboard"
	echo "Copied to $clip."
else
	echo "$pass"
fi
